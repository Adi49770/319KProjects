


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Aditya Tyagi and Jerry Yang***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/4/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed) making it a postive logic
    9 00000000         ;  PE0 is LED output (1 activates external9 LED on proto
                       board)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         
   42 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   43 00000000                 IMPORT           TExaS_Init
   44 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   45 00000000                 THUMB
   46 00000000                 EXPORT           Start
   47 00000000         
   48 00000000         Start
   49 00000000         ; TExaS_Init sets bus clock at 80 MHz
   50 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   51 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   52 00000006         ;Initialize the clock and other port
   53 00000006         
   54 00000006         ;NOP
   55 00000006 4843            LDR              R0, =SYSCTL_RCGCGPIO_R
   56 00000008 6801            LDR              R1, [R0]
   57 0000000A F041 0130       ORR              R1, #0x30
   58 0000000E 6001            STR              R1, [R0]
   59 00000010 BF00            NOP
   60 00000012 BF00            NOP
   61 00000014         ;2 bus cycles
   62 00000014         ; AFSEL
   63 00000014 4840            LDR              R0,=GPIO_PORTE_AFSEL_R
   64 00000016 F001 0100       AND              R1, #0
   65 0000001A 6001            STR              R1, [R0]    ;check this one 
   66 0000001C 483F            LDR              R0, =GPIO_PORTF_AFSEL_R
   67 0000001E 6001            STR              R1, [R0]
   68 00000020         ;set DEN
   69 00000020 483F            LDR              R0, =GPIO_PORTE_DEN_R
   70 00000022 6801            LDR              R1, [R0]
   71 00000024 F041 011F       ORR              R1, #0x1F
   72 00000028 6001            STR              R1, [R0]
   73 0000002A 483E            LDR              R0, =GPIO_PORTF_DEN_R
   74 0000002C 6801            LDR              R1, [R0]
   75 0000002E F041 011F       ORR              R1, #0x1F



ARM Macro Assembler    Page 3 


   76 00000032 6001            STR              R1, [R0]
   77 00000034         ;Unlock PUR
   78 00000034 483C            LDR              R0, =GPIO_PORTF_PUR_R
   79 00000036 F04F 0111       MOV              R1, #0x11
   80 0000003A 6001            STR              R1, [R0]
   81 0000003C         ;   LDR R0, =GPIO_PORTE_PUR_R
   82 0000003C         ; STR R1, [R0]
   83 0000003C         
   84 0000003C         ; set directon
   85 0000003C 483B            LDR              R0, =GPIO_PORTE_DIR_R
   86 0000003E 6801            LDR              R1, [R0]
   87 00000040 F041 0101       ORR              R1, #0x01   ;PE0 is the ourput,
                                                             the rest are o and
                                                             input?
   88 00000044 6001            STR              R1, [R0]
   89 00000046 483A            LDR              R0, =GPIO_PORTF_DIR_R
   90 00000048 6801            LDR              R1, [R0]
   91 0000004A F001 01E0       AND              R1, #0xE0   ;make sure the chec
                                                            k this one out as w
                                                            ell
   92 0000004E 6001            STR              R1, [R0]
   93 00000050         ;As of right now, the directions given should be set acc
                       ording to the inputs and outputs
   94 00000050 00      times   SPACE            1
   95 00000051 00      ButtonPressed
                               SPACE            1
   96 00000052 00      LOOPER  SPACE            1
   97 00000053 00 BF00         NOP
   98 00000056 F005 0500       AND              R5, #0
   99 0000005A F85F 400B       LDR              R4, ButtonPressed
  100 0000005E 6025            STR              R5, [R4]    ;the initial value 
                                                            of ButtonPressed is
                                                             0 
  101 00000060 F85F 4012       LDR              R4, LOOPER
  102 00000064 F04F 0519       MOV              R5, #25
  103 00000068 6025            STR              R5, [R4]    ;put #25 into LOOPE
                                                            R
  104 0000006A         
  105 0000006A 4832    loop    LDR              R0, =GPIO_PORTE_DATA_R ; receiv
                                                            e the data given by
                                                             PORT E
  106 0000006C         ;R4 and R5 are dummy registers 
  107 0000006C         
  108 0000006C         
  109 0000006C 6801            LDR              R1, [R0]
  110 0000006E F001 0202       AND              R2, R1, #0x02 ;isolate bit for 
                                                            PE1 to see if the s
                                                            witch is pressed or
                                                             not based on posit
                                                            ive logic
  111 00000072 2A02            CMP              R2, #0x02
  112 00000074 D101            BNE              next
  113 00000076 F000 F834       BL               BUTTONPRESSED
  114 0000007A         next
  115 0000007A F85F 402A       LDR              R4, LOOPER
  116 0000007E 6826            LDR              R6, [R4]
  117 00000080 F85F 5033       LDR              R5, ButtonPressed
  118 00000084 682D            LDR              R5, [R5]
  119 00000086 F04F 0719       MOV              R7, #25



ARM Macro Assembler    Page 4 


  120 0000008A FB05 F507       MUL              R5, R5, R7  ;get the amount of 
                                                            machine cyles neede
                                                            d for the LED
  121 0000008E 4435            ADD              R5, R6
  122 00000090 6025            STR              R5, [R4]    ;store back the nee
                                                            ded value back into
                                                             LOOPER
  123 00000092         
  124 00000092         ;set the value of LOOPER based on the number of buttons 
                       pressed
  125 00000092 F041 0101       ORR              R1, #0x01   ;turn on LED
  126 00000096 6001            STR              R1, [R0]
  127 00000098 F85F 504C       LDR              R5, times
  128 0000009C         ;LDR R5, [R5]
  129 0000009C F85F 404E       LDR              R4, LOOPER
  130 000000A0 6824            LDR              R4, [R4]
  131 000000A2 602C            STR              R4, [R5]    ;store the value of
                                                             LOOPER into times 
                                                            (I know, its a bit 
                                                            redudant but oh wel
                                                            l)
  132 000000A4         TurnOnLoop
  133 000000A4 F000 F82A       BL               TIMER       ;call the TIMER loo
                                                            p to kill time and 
                                                            machine cycles 
  134 000000A8 F85F 505C       LDR              R5, times
  135 000000AC 682C            LDR              R4, [R5]
  136 000000AE F1A4 0401       SUB              R4, #1
  137 000000B2 602C            STR              R4, [R5]
  138 000000B4 D5F6            BPL              TurnOnLoop  ;branch back if pos
                                                            itve or zero
  139 000000B6         
  140 000000B6 F001 011D       AND              R1, #0x1D   ;turn off LED
  141 000000BA F04F 047D       MOV              R4, #125
  142 000000BE F85F 506E       LDR              R5, LOOPER
  143 000000C2 682D            LDR              R5, [R5]
  144 000000C4 EBA4 0405       SUB              R4, R5      ;125 - LOOPER
  145 000000C8 F85F 507C       LDR              R5, times
  146 000000CC 602C            STR              R4, [R5]    ; store 125- LOOPER
                                                             into times (100 fo
                                                            r no button pressed
                                                            ) we may have to ca
                                                            librate these value
                                                            s 
  147 000000CE         
  148 000000CE         TurnOffLoop
  149 000000CE F000 F815       BL               TIMER       ;call the timer loo
                                                            p to kill time and 
                                                            machine cycles
  150 000000D2 F85F 5084       LDR              R5, times
  151 000000D6 682C            LDR              R4, [R5]
  152 000000D8 F1A4 0401       SUB              R4, #1
  153 000000DC 602C            STR              R4, [R5]
  154 000000DE D5F6            BPL              TurnOffLoop ;branch back if pos
                                                            itive or zero
  155 000000E0         
  156 000000E0 E7C3            B                loop
  157 000000E2         ;;;;;;;;;;;;;;;buttonpressed Method;;;
  158 000000E2         BUTTONPRESSED



ARM Macro Assembler    Page 5 


  159 000000E2         
  160 000000E2 F001 011E       AND              R1, #0x1E   ;turn off the LED
  161 000000E6 F04F 0401       MOV              R4, #1
  162 000000EA F85F 509B       LDR              R5, ButtonPressed
  163 000000EE 682D            LDR              R5, [R5]
  164 000000F0 442C            ADD              R4, R5
  165 000000F2 602C            STR              R4, [R5]    ; increment the val
                                                            ue of ButtonPressed
                                                             by 1
  166 000000F4 F001 011D       AND              R1, #0x1D   ;turn off the bit t
                                                            o the switch to avo
                                                            id redundancy
  167 000000F8 6001            STR              R1, [R0]
  168 000000FA 4770            BX               LR          ;return
  169 000000FC         
  170 000000FC         
  171 000000FC         
  172 000000FC         ;;;;;;;;;;;;;;TIMER LOOP;;;;;;;;;;;;
  173 000000FC         TIMER
  174 000000FC F04F 0510       MOV              R5, #16
  175 00000100         DLoop
  176 00000100 F44F 747A       MOV              R4, #1000
  177 00000104         DLoop1
  178 00000104 F1A4 0401       SUB              R4, #1
  179 00000108 D1FC            BNE              DLoop1
  180 0000010A F1A5 0501       SUB              R5, #1
  181 0000010E D1F7            BNE              DLoop
  182 00000110 4770            BX               LR          ;return
  183 00000112         
  184 00000112         
  185 00000112         
  186 00000112         
  187 00000112 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  188 00000114                 END                          ; end of file
              400FE608 
              40024420 
              40025420 
              4002451C 
              4002551C 
              40025510 
              40024400 
              40025400 
              400243FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 44 in file main.s
   Uses
      None
Comment: .text unused
BUTTONPRESSED 000000E2

Symbol: BUTTONPRESSED
   Definitions
      At line 158 in file main.s
   Uses
      At line 113 in file main.s
Comment: BUTTONPRESSED used once
ButtonPressed 00000051

Symbol: ButtonPressed
   Definitions
      At line 95 in file main.s
   Uses
      At line 99 in file main.s
      At line 117 in file main.s
      At line 162 in file main.s

DLoop 00000100

Symbol: DLoop
   Definitions
      At line 175 in file main.s
   Uses
      At line 181 in file main.s
Comment: DLoop used once
DLoop1 00000104

Symbol: DLoop1
   Definitions
      At line 177 in file main.s
   Uses
      At line 179 in file main.s
Comment: DLoop1 used once
LOOPER 00000052

Symbol: LOOPER
   Definitions
      At line 96 in file main.s
   Uses
      At line 101 in file main.s
      At line 115 in file main.s
      At line 129 in file main.s
      At line 142 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 48 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 46 in file main.s
Comment: Start used once
TIMER 000000FC

Symbol: TIMER
   Definitions
      At line 173 in file main.s
   Uses
      At line 133 in file main.s
      At line 149 in file main.s

TurnOffLoop 000000CE

Symbol: TurnOffLoop
   Definitions
      At line 148 in file main.s
   Uses
      At line 154 in file main.s
Comment: TurnOffLoop used once
TurnOnLoop 000000A4

Symbol: TurnOnLoop
   Definitions
      At line 132 in file main.s
   Uses
      At line 138 in file main.s
Comment: TurnOnLoop used once
loop 0000006A

Symbol: loop
   Definitions
      At line 105 in file main.s
   Uses
      At line 156 in file main.s
Comment: loop used once
next 0000007A

Symbol: next
   Definitions
      At line 114 in file main.s
   Uses
      At line 112 in file main.s
Comment: next used once
times 00000050

Symbol: times
   Definitions
      At line 94 in file main.s
   Uses
      At line 127 in file main.s
      At line 134 in file main.s
      At line 145 in file main.s
      At line 150 in file main.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 63 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 105 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 69 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 66 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 37 in file main.s
   Uses
      At line 89 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 78 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 55 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 50 in file main.s
Comment: TExaS_Init used once
1 symbol
357 symbols in table
